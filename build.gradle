apply plugin: 'java'
apply plugin: 'com.bmuschko.docker-remote-api'

group = 'com.github.masahitojp'
archivesBaseName = "botan-example"
version = '0.0.0.1'

sourceCompatibility = 1.8
targetCompatibility = 1.8

def defaultEncoding = 'UTF-8'
tasks.withType(AbstractCompile)*.options*.encoding = defaultEncoding
tasks.withType(GroovyCompile)*.groovyOptions*.encoding = defaultEncoding

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.bmuschko:gradle-docker-plugin:2.5.2'
    }
}

repositories {
    mavenCentral()
    maven {
        // Atilika Open Source repository (for kuromoji)
        url "http://www.atilika.org/nexus/content/repositories/atilika"

    }
    maven {
        url "https://oss.sonatype.org/content/repositories/releases/"
    }
}

dependencies {
    compile 'com.github.masahitojp:nineteen:0.0.2'
    compile 'com.github.masahitojp:botan-core:0.0.0.25'
    compile 'it.sauronsoftware.cron4j:cron4j:2.2.5'
    compile 'com.squareup.okhttp:okhttp:2.5.0'
    compile 'com.google.code.gson:gson:2.3.1'
    compile 'org.mapdb:mapdb:2.0-beta6'
    compile 'redis.clients:jedis:2.7.3'
    compile 'org.slf4j:slf4j-api:1.7.12'
    compile 'ch.qos.logback:logback-classic:1.1.3'
    testCompile 'junit:junit:4.12'
    testCompile "org.hamcrest:java-hamcrest:2.0.0.0"
    testCompile 'org.jmockit:jmockit:1.19'
}

jar {
    manifest {
        attributes 'Main-Class': 'com.github.masahitojp.botan.SlackBot'
    }
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
}

task copyJar(type: Copy) {
    dependsOn   'jar'
    from        "build/libs/${archivesBaseName}-${project.version}.jar"
    into        'build/docker'
    rename { String fileName ->
        fileName.replace("-${project.version}", "")
    }
}
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

task buildDockerImage(type: DockerBuildImage) {
    dependsOn   copyJar
    if (System.env.DOCKER_HOST) {
        url = "$System.env.DOCKER_HOST".replace("tcp","https")
        if (System.env.DOCKER_CERT_PATH) {
            certPath = new File(System.env.DOCKER_CERT_PATH)

        }
    }
    else {
        url = 'unix:///var/run/docker.sock'
    }
    tag = "masahitojp/botan-example"
    inputDir = file('.')
}
